@model condominio.Models.visistante

@{
    ViewBag.Title = "Edit";
}

<h2>Editar</h2>


@using (Html.BeginForm("Edit", "visistantes", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <div class="alert alert-info">
        <strong>Info!</strong> Ao editar e necessario adicionar novamente a imagem desejada
    </div>
    <h4>Visistante</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.id)

    <div class="form-group">
        @Html.LabelFor(model => model.nome, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.nome, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.nome, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.numApartamento, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.numApartamento, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.numApartamento, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.bloco, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.bloco, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.bloco, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.telefone1, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.telefone1, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.telefone1, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.telefone2, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.telefone2, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.telefone2, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.observacao, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.observacao, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.observacao, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label for="fname" class="control-label col-md-2">Imagem</label>
        <div class="col-md-10">


            <script>

                $(".imgAdd").click(function () {
                    $(this).closest(".row").find('.imgAdd').before('<div class="col-sm-2 imgUp"><div class="imagePreview"></div><label class="btn btn-primary">Upload<input type="file" class="uploadFile img" value="Upload Photo" style="width:0px;height:0px;overflow:hidden;"></label><i class="fa fa-times del"></i></div>');
                });
                $(document).on("click", "i.del", function () {
                    $(this).parent().remove();
                });
                $(function () {
                    $(document).on("change", ".uploadFile", function () {
                        var uploadFile = $(this);
                        var files = !!this.files ? this.files : [];
                        if (!files.length || !window.FileReader) return; // no file selected, or no FileReader support

                        if (/^image/.test(files[0].type)) { // only image file
                            var reader = new FileReader(); // instance of the FileReader
                            reader.readAsDataURL(files[0]); // read the local file

                            reader.onloadend = function () { // set image data as background of div
                                //alert(uploadFile.closest(".upimage").find('.imagePreview').length);
                                uploadFile.closest(".imgUp").find('.imagePreview').css("background-image", "url(" + this.result + ")");
                            }
                        }

                    });
                });

            </script>

            <style>
                body {
                    background-color: #f5f5f5;
                }

                .imagePreview {
                    width: 100%;
                    height: 180px;
                    background-position: center center;
                    background: url(http://cliquecities.com/assets/no-image-e3699ae23f866f6cbdf8ba2443ee5c4e.jpg);
                    background-color: #fff;
                    background-size: cover;
                    background-repeat: no-repeat;
                    display: inline-block;
                    box-shadow: 0px -3px 6px 2px rgba(0,0,0,0.2);
                }

                .btn-primary {
                    display: block;
                    border-radius: 0px;
                    box-shadow: 0px 4px 6px 2px rgba(0,0,0,0.2);
                    margin-top: -5px;
                }

                .imgUp {
                    margin-bottom: 15px;
                }

                .del {
                    position: absolute;
                    top: 0px;
                    right: 15px;
                    width: 30px;
                    height: 30px;
                    text-align: center;
                    line-height: 30px;
                    background-color: rgba(255,255,255,0.6);
                    cursor: pointer;
                }

                .imgAdd {
                    width: 30px;
                    height: 30px;
                    border-radius: 50%;
                    background-color: #4bd7ef;
                    color: #fff;
                    box-shadow: 0px 0px 2px 1px rgba(0,0,0,0.2);
                    text-align: center;
                    line-height: 30px;
                    margin-top: 0px;
                    cursor: pointer;
                    font-size: 15px;
                }
            </style>

            <br><div class="container">
                <div class="row">
                    <div class="col-sm-2 imgUp">
                        <div class="imagePreview"></div>
                        <label class="btn btn-primary">
                            Upload<input type="file" name="Imagemfile" class="uploadFile img" value="Upload Photo" style="width: 0px;height: 0px;overflow: hidden;" required>
                        </label>
                    </div><!-- col-2 -->
                </div><!-- row -->
                <p>Imagem é obrigatoria*</p>
            </div><!-- container -->
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Salvar" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Voltar", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
